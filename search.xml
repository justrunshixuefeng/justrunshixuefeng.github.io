<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Django-DBrouter</title>
      <link href="/2018/08/08/Django-DBrouter/"/>
      <url>/2018/08/08/Django-DBrouter/</url>
      
        <content type="html"><![CDATA[<h2 id="DB-router"><a href="#DB-router" class="headerlink" title="DB-router"></a>DB-router</h2><blockquote><p>通过编写<strong>db-router</strong>可以灵性连接<strong>mysql</strong>主从复制等情况下的多数据库</p></blockquote><ul><li>假设你已经配置好了类似<strong>MYSQL</strong>主从复制的服务，如果没有可以参照<a href="https://lienze.tech/blog/mysql/c813917a.html" target="_blank" rel="noopener">这里</a></li></ul><a id="more"></a><ul><li>settings.py</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;    'default': &#123;        'ENGINE': 'django.db.backends.mysql',        'HOST': '192.168.1.101',        'PORT': <span class="number">3306</span>,        'USER': 'root',        'PASSWORD': '<span class="number">123456</span>',        'NAME': 'test1'    &#125;,    'slave': &#123;        'ENGINE': 'django.db.backends.mysql',        'HOST': '192.168.1.102',        'PORT': <span class="number">3306</span>,        'USER': 'root',        'PASSWORD': '<span class="number">123456</span>',        'NAME': 'test1'    &#125;&#125;DATABASE_ROUTERS = ['pro.utils.MasterSlaveDBRouter']</span><br></pre></td></tr></table></figure><ul><li>编写<strong>db-router</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MasterSlaveDBRouter</span>:</span>    <span class="string">"""数据库主从读写分离路由"""</span>    <span class="function"><span class="keyword">def</span> <span class="title">db_for_read</span><span class="params">(self, model, **hints)</span>:</span>        <span class="string">"""读数据库"""</span>        <span class="keyword">return</span> <span class="string">"slave"</span>    <span class="function"><span class="keyword">def</span> <span class="title">db_for_write</span><span class="params">(self, model, **hints)</span>:</span>        <span class="string">"""写数据库"""</span>        <span class="keyword">return</span> <span class="string">"default"</span>    <span class="function"><span class="keyword">def</span> <span class="title">allow_relation</span><span class="params">(self, obj1, obj2, **hints)</span>:</span>        <span class="string">"""是否运行关联操作"""</span>        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>如出现以下错误，修改主库binlog日志格式</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">django.db.utils.InternalError: (1665, 'Cannot <span class="keyword">execute</span> <span class="keyword">statement</span>: impossible <span class="keyword">to</span> write <span class="keyword">to</span> <span class="built_in">binary</span> <span class="keyword">log</span> since BINLOG_FORMAT = <span class="keyword">STATEMENT</span> <span class="keyword">and</span> <span class="keyword">at</span> <span class="keyword">least</span> one <span class="keyword">table</span> uses a <span class="keyword">storage</span> <span class="keyword">engine</span> limited <span class="keyword">to</span> <span class="keyword">row</span>-based logging. <span class="keyword">InnoDB</span> <span class="keyword">is</span> limited <span class="keyword">to</span> <span class="keyword">row</span>-<span class="keyword">logging</span> <span class="keyword">when</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">is</span> <span class="keyword">READ</span> COMMITTED <span class="keyword">or</span> <span class="keyword">READ</span> UNCOMMITTED.<span class="string">')</span></span><br><span class="line"><span class="string">binlog_format=mixed</span></span><br></pre></td></tr></table></figure><h3 id="打开日志用以分析"><a href="#打开日志用以分析" class="headerlink" title="打开日志用以分析"></a>打开日志用以分析</h3><ul><li>可以通过配置<strong>mysql</strong>日志记录，用以查看主从在读写情况下的效果</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">general_log=<span class="number">1</span>general_log_file=<span class="regexp">/var/</span>lib<span class="regexp">/mysql/g</span>eneral.log</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql主从复制</title>
      <link href="/2018/08/08/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
      <url>/2018/08/08/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="Mysql主从复制"><a href="#Mysql主从复制" class="headerlink" title="Mysql主从复制"></a>Mysql主从复制</h2><ul><li>什么是<strong>主从复制</strong>？</li></ul><blockquote><p>主从复制至少需要两台服务器，或两个<strong>mysql</strong>服务，可以配置一主多从，多主多从</p><p>建立与某个业务数据库一样的数据库环境，即为主从复制</p><p>一般情况下，主库用以写，而从库用以读</p></blockquote><a id="more"></a><ul><li>为什么要搭建主从复制？<ol><li>构建主从热备，当某天数据库宕机或或数据丢失情况，可以有备份数据库继续工作</li><li>降低IO频次，多库之间可以合理分配读写压力，提高单个数据库服务的数据库访问压力</li><li>隔离读写，在某些锁表情况下，可以使数据库读操作继续进行</li></ol></li></ul><blockquote><p>利用数据库<strong>bin-log</strong>二进制文件，该文件包含有数据库操作的所有SQL语句</p><p>复制该文件至其余数据库服务中并执行即可</p></blockquote><ul><li><p>主从复制过程</p><ol><li><p>当主库具有新数据时，主库会被从库请求，建立线程进行连接，用以传输<strong>binlog</strong>日志</p></li><li><p>从库开启两个线程</p><blockquote><p>A线程：也叫做<strong>IO线程</strong>，连接主库，并请求binlog中的更新记录至从库中，写入至从库的<strong>relaylog</strong>文件中</p><p>B线程：也叫做<strong>SQL线程</strong>，读取<strong>relaylog</strong>文件中的更新操作并执行</p></blockquote></li><li><p>如果，有多个从库同时存在，主库会为每个从库建立一个<strong>binlog</strong>输出线程</p></li></ol></li></ul><p>[<img src="/2018/08/08/主从复制/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E8%87%AA%E7%BB%98.png" alt="主从复制原理自绘">]</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password_policy=<span class="keyword">LOW</span>;<span class="keyword">set</span> <span class="keyword">global</span> validate_password_length=<span class="number">6</span>;</span><br></pre></td></tr></table></figure><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><blockquote><p>此处以一主一丛为例</p></blockquote><ul><li>系统环境<ul><li>主库（master）：192.168.1.100</li><li>从库（slave）：192.168.1.101</li></ul></li></ul><h3 id="主库修改"><a href="#主库修改" class="headerlink" title="主库修改"></a>主库修改</h3><ul><li>主库配置修改</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server-id = <span class="attribute">1log-bin</span>=mysql-bin # 开启log <span class="attribute">binexpire_logs_days</span>=7 # 日志保存时间</span><br></pre></td></tr></table></figure><blockquote><p><strong>server-id</strong>：</p><p>同步数据中必须包含<strong>server-id</strong>，用于标识该语句最初是从哪个<strong>server</strong>写入</p><p>每个<strong>slave</strong>端只能有一个线程在<strong>master</strong>端连接，如果两个<strong>salve</strong>端的<strong>server-id</strong>一致，一个连接成功之后，前一个连接将会被断开</p><p>主主同步时，避免数据同步陷入死循环</p></blockquote><ul><li>主库创建用户，用以从机连接获取<strong>binlog</strong>日志</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">replication</span> <span class="keyword">slave</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'master'</span>@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span>;<span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="keyword">master</span>@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">"123456"</span>;</span><br></pre></td></tr></table></figure><ul><li>查看master状态</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">master</span> <span class="keyword">status</span>;</span><br></pre></td></tr></table></figure><ul><li>记录上条命令返回的<strong>binlog</strong>文件名，<strong>Position</strong>属性，从机连接的时候要用</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+<span class="params">------------------</span>+<span class="params">----------</span>+<span class="params">--------------</span>+<span class="params">------------------</span>+<span class="params">-------------------</span>+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+<span class="params">------------------</span>+<span class="params">----------</span>+<span class="params">--------------</span>+<span class="params">------------------</span>+<span class="params">-------------------</span>+| mysql-bin.000001 |      154 |              |                  |                   |+<span class="params">------------------</span>+<span class="params">----------</span>+<span class="params">--------------</span>+<span class="params">------------------</span>+<span class="params">-------------------</span>+1 row in <span class="keyword">set</span> <span class="params">(0.00 sec)</span></span><br></pre></td></tr></table></figure><h3 id="从库修改"><a href="#从库修改" class="headerlink" title="从库修改"></a>从库修改</h3><ul><li>从库配置修改</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server-id</span>=<span class="number">11</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>master</strong>与<strong>slave</strong>端的<strong>server-id</strong>不能一样</p><p><strong>salve</strong>端无需开启<strong>log-bin</strong>功能</p></blockquote><ul><li>从库指定master，执行如下</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'192.168.1.100'</span>, <span class="attribute">master_port</span>=3306, <span class="attribute">master_user</span>=<span class="string">'master'</span>, <span class="attribute">master_password</span>=<span class="string">'123456'</span>, <span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000001'</span>, <span class="attribute">master_log_pos</span>=154;</span><br></pre></td></tr></table></figure><ul><li>启动从机</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br></pre></td></tr></table></figure><h3 id="同步特定的库"><a href="#同步特定的库" class="headerlink" title="同步特定的库"></a>同步特定的库</h3><h4 id="主机处配置"><a href="#主机处配置" class="headerlink" title="主机处配置"></a>主机处配置</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">binlog-do-db</span>=xxxx   # 二进制日志记录的数据库<span class="attribute">binlog-ignore-db</span>=xxxx # 二进制日志中忽略数据库</span><br></pre></td></tr></table></figure><h4 id="从机处配置"><a href="#从机处配置" class="headerlink" title="从机处配置"></a>从机处配置</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replicate-<span class="keyword">do</span>-<span class="keyword">db</span>    # 设定需要复制的数据库replicate-ignore-<span class="keyword">db</span> # 设定需要忽略的复制数据库replicate-<span class="keyword">do</span>-<span class="keyword">table</span>  # 设定需要复制的表replicate-ignore-<span class="keyword">table</span> # 设定需要忽略的复制表replicate-wild-<span class="keyword">do</span>-<span class="keyword">table</span> # 同replication-<span class="keyword">do</span>-<span class="keyword">table</span>功能一样，但是可以通配符replicate-wild-ignore-<span class="keyword">table</span> # 同replication-ignore-<span class="keyword">table</span>功能一样，但是可以加通配符</span><br></pre></td></tr></table></figure><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><ul><li><strong>mysql</strong>-&gt;<strong>mariadb</strong>版本问题</li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Last_IO_Error: Got fatal <span class="keyword">error</span> <span class="number">1236</span> <span class="keyword">from</span> master when reading data <span class="keyword">from</span> binary <span class="built_in">log</span>: 'Client requested master <span class="keyword">to</span> start replication <span class="keyword">from</span> position &gt; <span class="built_in">file</span> size'</span><br></pre></td></tr></table></figure><blockquote><p>从<strong>MySQL5.6</strong>开始引入了<strong>binlog_checksum</strong>全局变量，即<strong>MySQL</strong>会将<strong>event</strong>的<strong>CRC32</strong>校验值也写入<strong>binlog</strong>，显然<strong>MariaDB</strong>在分析日志的时候不会考虑该信息，导致解析出错</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%binlog%'</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> binlog_checksum=<span class="keyword">NONE</span>;</span><br></pre></td></tr></table></figure><ul><li><p>当使用命令show slave status\G;  查看从机与主机的连接状态时，本应该这样：</p><p>​    Slave_IO_Running: Yes</p><p>​    Slave_SQL_Running: Yes    </p><p>​     但是出现了这种情况：</p><p><img src="/2018/08/08/主从复制/%E9%94%99%E8%AF%AF.png" alt="image"></p></li><li><p>处理办法：</p><ul><li>重置mysql数据库 ：systemctl restart mariadb.service</li><li>由此我想到了一个远古的传说：当改变应用程序的配置文件后，先重新启动以保证配置文件生效！！！谨记</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
